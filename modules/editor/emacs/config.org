#+PROPERTY: header-args:emacs-lisp :tangle config.el
#+title: KLChen
* early-init

#+begin_src emacs-lisp
(setq gc-cons-threshold most-positive-fixnum)

;; All our packages come from Nix
(setq package-enable-at-startup nil
      package-archives nil)

(provide 'early-init)
;;; early-init.el ends here
#+end_src
* config.el
** config.el
*** lexical-binding
#+begin_src emacs-lisp
;;; -*- lexical-binding: t -*-
#+end_src
*** Native Compilation
#+begin_src emacs-lisp :tangle config.el
(when (and (fboundp 'native-comp-available-p)
           (native-comp-available-p))
  (setq native-comp-async-report-warnings-errors nil
        native-comp-deferred-compilation t))
#+end_src
*** use-package
#+begin_src emacs-lisp
(require 'use-package)
(setq use-package-always-defer t
      use-package-expand-minimally t)
#+end_src
** Startup
#+begin_src emacs-lisp
(use-package meow
  :ensure t
  :defer nil
  :config
  (meow-setup)
  (meow-global-mode 1))
#+end_src
** org mode
#+begin_src emacs-lisp
(use-package org
      :ensure t
      :defer t
)
(use-package org-modern
  :ensure t
  :defer t
  :after org
  :hook
  (org-mode . org-modern-mode)
  :config
  ;; Add frame borders and window dividers
      (modify-all-frames-parameters
      '((right-divider-width . 40)
      (internal-border-width . 40)))
      (dolist (face '(window-divider
                  window-divider-first-pixel
                  window-divider-last-pixel))
      (face-spec-reset-face face)
      (set-face-foreground face (face-attribute 'default :background)))
      (set-face-background 'fringe (face-attribute 'default :background))

      (setq
      ;; Edit settings
      org-auto-align-tags nil
      org-tags-column 0
      org-catch-invisible-edits 'show-and-error
      org-special-ctrl-a/e t
      org-insert-heading-respect-content t

      ;; Org styling, hide markup etc.
      org-hide-emphasis-markers t
      org-pretty-entities t
      org-agenda-tags-column 0
      org-ellipsis "â€¦")

      (global-org-modern-mode)
)
#+end_src
